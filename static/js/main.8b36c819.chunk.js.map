{"version":3,"sources":["redux/contacts/ContactTypes.jsx","redux/contacts/ContactActions.jsx","components/AddEditContact.jsx","components/Contacts.jsx","components/Header.jsx","redux/contacts/ContactReducer.jsx","redux/store.jsx","App.js","reportWebVitals.js","index.js"],"names":["GET_ALL_CONTACTS","ADD_CONTACT","GET_CONTACT","DELETE_CONTACT","EDIT_CONTACT","RESET_CONTACT","resetContact","type","AddEditContact","sContact","useSelector","state","contact","useEffect","setContact","dispatch","useDispatch","useState","name","phoneNumber","email","handleChange","value","oldContact","closeRef","useRef","handleSubmit","id","undefined","payload","editContact","addContact","current","click","className","ref","data-dismiss","aria-label","aria-hidden","htmlFor","placeholder","onChange","e","target","onClick","Contacts","contacts","Fragment","data-toggle","data-target","length","scope","map","index","getContact","deleteContact","tabIndex","role","aria-labelledby","Header","href","initialState","store","createStore","action","push","splice","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b36c819.chunk.js","sourcesContent":["export const GET_ALL_CONTACTS = \"GET_ALL_CONTACTS\";\r\nexport const ADD_CONTACT = \"ADD_CONTACT\";\r\nexport const GET_CONTACT = \"GET_CONTACT\";\r\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\r\nexport const EDIT_CONTACT = \"EDIT_CONTACT\";\r\nexport const RESET_CONTACT = \"RESET_CONTACT\";\r\n","import {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  EDIT_CONTACT,\r\n  GET_ALL_CONTACTS,\r\n  GET_CONTACT,\r\n  RESET_CONTACT,\r\n} from \"./ContactTypes\";\r\n\r\nexport const getAllContacts = () => {\r\n  return {\r\n    type: GET_ALL_CONTACTS,\r\n  };\r\n};\r\n\r\nexport const addContact = (contact) => {\r\n  return {\r\n    type: ADD_CONTACT,\r\n    payload: contact,\r\n  };\r\n};\r\n\r\nexport const editContact = (contact, id) => {\r\n  return {\r\n    type: EDIT_CONTACT,\r\n    payload: contact,\r\n    id: id,\r\n  };\r\n};\r\n\r\nexport const getContact = (index) => {\r\n  return {\r\n    type: GET_CONTACT,\r\n    index: index,\r\n  };\r\n};\r\n\r\nexport const deleteContact = (index) => {\r\n  return {\r\n    type: DELETE_CONTACT,\r\n    index: index,\r\n  };\r\n};\r\n\r\nexport const resetContact = () => {\r\n  return {\r\n    type: RESET_CONTACT,\r\n  };\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addContact,\r\n  editContact,\r\n  resetContact,\r\n} from \"../redux/contacts/ContactActions\";\r\n\r\nexport default function AddEditContact() {\r\n  let sContact = useSelector((state) => state.contact);\r\n  useEffect(() => {\r\n    if (sContact) setContact(sContact);\r\n  }, [sContact]);\r\n  const dispatch = useDispatch();\r\n  const [contact, setContact] = useState({\r\n    name: \"\",\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n  });\r\n  const handleChange = (name, value) => {\r\n    const oldContact = { ...contact };\r\n    oldContact[name] = value;\r\n    setContact(oldContact);\r\n  };\r\n  const closeRef = useRef();\r\n  const handleSubmit = () => {\r\n    if (contact.id !== null && contact.id !== undefined) {\r\n      dispatch(editContact(contact, contact.id));\r\n    } else {\r\n      dispatch(addContact(contact));\r\n    }\r\n    dispatch(resetContact());\r\n    closeRef.current.click();\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">\r\n            Add / Edit Contact\r\n          </h5>\r\n          <button\r\n            ref={closeRef}\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"formGroupExampleInput\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"formGroupExampleInput\"\r\n                placeholder=\"Name\"\r\n                value={contact.name}\r\n                onChange={(e) => handleChange(\"name\", e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"formGroupExampleInput2\">Phone Number</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"formGroupExampleInput2\"\r\n                placeholder=\"Phone Number\"\r\n                value={contact.phoneNumber}\r\n                onChange={(e) => handleChange(\"phoneNumber\", e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"formGroupExampleInput2\">Email</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"formGroupExampleInput2\"\r\n                placeholder=\"Email\"\r\n                value={contact.email}\r\n                onChange={(e) => handleChange(\"email\", e.target.value)}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            data-dismiss=\"modal\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={() => handleSubmit()}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  deleteContact,\r\n  getContact,\r\n  resetContact,\r\n} from \"../redux/contacts/ContactActions\";\r\nimport AddEditContact from \"./AddEditContact\";\r\n\r\nexport default function Contacts() {\r\n  const dispatch = useDispatch();\r\n  let contacts = useSelector((state) => state.contacts);\r\n  let contact = useSelector((state) => state.contact);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container d-flex flex-row justify-content-between mt-4\">\r\n        <h1>All contacts</h1>\r\n        <button\r\n          data-toggle=\"modal\"\r\n          data-target=\"#exampleModalCenter\"\r\n          className=\"btn btn-primary\"\r\n          onClick={() => resetContact()}\r\n        >\r\n          + Add Contact\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <div></div>\r\n        {contacts.length === 0 && (\r\n          <p className=\"text-center text-danger\">No Records Found</p>\r\n        )}\r\n        {contacts.length > 0 && (\r\n          <table className=\"container table table-striped table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">S.No</th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Phone</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {contacts.map((contact, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <th>{index + 1}</th>\r\n                    <th>{contact.name}</th>\r\n                    <th>{contact.phoneNumber}</th>\r\n                    <th>{contact.email}</th>\r\n                    <th>\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#exampleModalCenter\"\r\n                        onClick={() => dispatch(getContact(index))}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                      &nbsp;\r\n                      <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={() => dispatch(deleteContact(index))}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </th>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"exampleModalCenter\"\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"exampleModalCenterTitle\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n          <AddEditContact contact={contact}></AddEditContact>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     contacts: state.contacts,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     getAllContacts: () => dispatch(getAllContacts()),\r\n//   };\r\n// };\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import React from \"react\";\r\nimport Contacts from \"./Contacts\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          Contacts\r\n        </a>\r\n\r\n        <div\r\n          className=\"collapse navbar-collapse justify-content-end\"\r\n          id=\"navbarSupportedContent\"\r\n        >\r\n          <form className=\"form-inline my-2 my-lg-0 d-flex\">\r\n            <input\r\n              className=\"form-control mr-sm-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button\r\n              className=\"btn btn-outline-success my-2 my-sm-0\"\r\n              type=\"submit\"\r\n            >\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </nav>\r\n      <Contacts>\r\n        <button></button>\r\n      </Contacts>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  EDIT_CONTACT,\r\n  GET_ALL_CONTACTS,\r\n  GET_CONTACT,\r\n  RESET_CONTACT,\r\n} from \"./ContactTypes\";\r\n\r\nconst initialState = {\r\n  contacts: [\r\n    {\r\n      name: \"Sudhakar\",\r\n      phoneNumber: \"9839394849\",\r\n      email: \"dansudhakar@gmail.com\",\r\n    },\r\n    {\r\n      name: \"Raj\",\r\n      phoneNumber: \"9839394849\",\r\n      email: \"dansudhakar@gmail.com\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport const contactReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_CONTACTS:\r\n      return {\r\n        ...state,\r\n      };\r\n    case ADD_CONTACT: {\r\n      let contacts = [...state.contacts];\r\n      contacts.push(action.payload);\r\n      return {\r\n        ...state,\r\n        contacts,\r\n      };\r\n    }\r\n    case EDIT_CONTACT: {\r\n      let contacts = [...state.contacts];\r\n      contacts[action.id] = action.payload;\r\n      return {\r\n        ...state,\r\n        contacts,\r\n      };\r\n    }\r\n    case GET_CONTACT: {\r\n      return {\r\n        ...state,\r\n        contact: { ...state.contacts[action.index], id: action.index },\r\n      };\r\n    }\r\n    case DELETE_CONTACT: {\r\n      let contacts = [...state.contacts];\r\n      contacts.splice(action.index, 1);\r\n      return {\r\n        ...state,\r\n        contacts,\r\n      };\r\n    }\r\n    case RESET_CONTACT: {\r\n      return {\r\n        ...state,\r\n        contact: {\r\n          name: \"\",\r\n          phoneNumber: \"\",\r\n          email: \"\",\r\n        },\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore } from \"redux\";\r\nimport { contactReducer } from \"./contacts/ContactReducer\";\r\n\r\nconst store = createStore(contactReducer);\r\n\r\nexport default store;\r\n","import { Provider } from \"react-redux\";\nimport \"./App.css\";\nimport \"./appStyles.css\";\nimport Header from \"./components/Header\";\nimport store from \"./redux/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        {/* <CakeContainer numOfCakes={10}></CakeContainer> */}\n        {/* <AxiosEg></AxiosEg> */}\n        <Header></Header>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}